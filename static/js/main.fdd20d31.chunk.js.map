{"version":3,"sources":["components/Pagination.js","components/FilterButtons.js","components/SortButtons.js","components/SorterFilter.js","components/ToDoInput.js","components/ToDoListItem.js","components/ToDoList.js","axiosConfig.js","components/Todo.js","components/Auth.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Pagination","currentPage","setCurrentPage","pagesCount","pageCount","Array","fill","map","_","i","Grid","container","Button","color","onClick","item","xs","ButtonGroup","fullWidth","number","variant","length","FilterButtons","handleFilter","filterType","title","type","button","SortButtons","handleSorter","sorterType","handleButton","IconButton","SorterFilter","sorterFilter","setSorterFilter","direction","alignItems","justify","Typography","prev","ToDoInput","handleSubmit","useState","todo","setTodo","pressEnter","event","a","key","preventDefault","TextField","multiline","label","margin","onChange","e","target","value","onKeyDown","styles","border","borderRadius","marginBottom","ToDoLIstItem","handleDelete","handleTodoChange","time","createdAt","match","toggleInput","setToggleInput","task","setTask","handleKeyDown","name","ListItem","style","Checkbox","done","checked","icon","checkedIcon","autoFocus","ListItemText","primary","overflowWrap","uuid","ToDoList","todos","List","axiosConfig","axios","create","baseURL","process","REACT_APP_URL","Todo","setUserName","setIsLogin","POSTurl","setTodos","postsPerPage","setPagesCount","isLoading","setIsLoading","fetchTodos","useCallback","token","localStorage","getItem","defaults","headers","common","get","params","filterBy","order","curentPage","limit","res","data","tasks","userName","response","message","removeItem","useEffect","post","delete","patch","CircularProgress","Auth","signup","password","user","setUser","helperText","setHelperText","login","setItem","signUp","handleChange","onSubmit","error","required","Header","isLogin","setSignup","sx","align","App","checkToken","Container","maxWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","interceptors","use","console","log","status","Promise","reject","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fdd20d31.chunk.js","sourcesContent":["import { Button, ButtonGroup, Grid } from '@material-ui/core';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport React from 'react';\n\nexport const Pagination = ({ currentPage, setCurrentPage, pagesCount }) => {\n\n    const pageCount = new Array(pagesCount).fill(0).map((_, i) => i + 1)\n\n    return (\n        <Grid container>\n            <Button\n                color='primary'\n                onClick={() => setCurrentPage(1)}>\n                <ArrowBackIosIcon />\n                <ArrowBackIosIcon />\n            </Button>\n            <Grid item xs={9}>\n                <ButtonGroup fullWidth>\n                    {pageCount.map(number => (\n                        <Button\n                            color='primary'\n                            key={number}\n                            variant={number === currentPage && 'contained'}\n                            onClick={() => setCurrentPage(number)}>\n                            {number}\n                        </Button>\n                    ))}\n                </ButtonGroup>\n            </Grid>\n            <Button\n                color='primary'\n                onClick={() => setCurrentPage(pageCount.length)}>\n                <ArrowForwardIosIcon />\n                <ArrowForwardIosIcon />\n            </Button>\n        </Grid>\n    );\n};","import { Button, ButtonGroup } from '@material-ui/core';\nimport React from 'react';\n\nexport const FilterButtons = ({ handleFilter, filterType }) => {\n    const buttons = [{title: 'All', type: ''},\n                     {title: 'Done',type: 'done'},\n                     {title: 'Undone', type: 'undone'}];\n\n    return (\n        <ButtonGroup >\n            {buttons.map((button) => (\n                <Button color='primary'\n                    key={button.title}\n                    variant={button.type === filterType && 'contained'}\n                    onClick={() => {\n                        if (filterType !== button.type) {\n                            return handleFilter(button.type)\n                        }\n                    }}>{button.title}</Button>\n            ))}\n        </ButtonGroup>\n    );\n};","import { IconButton } from '@material-ui/core';\nimport React from 'react';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\n\nexport const SortButtons = ({ handleSorter , sorterType}) => {\n    const handleButton = (type) => {\n        if(type !== sorterType){\n            handleSorter(type);\n        };\n    };\n\n    return (\n        <>\n            <IconButton color={sorterType ? 'primary' : 'default'}\n                onClick={() => handleButton(true)}>\n                <ArrowUpwardIcon />\n            </IconButton>\n            <IconButton color={!sorterType ? 'primary' : 'default'}\n                onClick={() => handleButton(false)}>\n                <ArrowDownwardIcon />\n            </IconButton>\n        </>\n    );\n};","import { Grid, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { FilterButtons } from \"./FilterButtons\";\nimport { SortButtons } from \"./SortButtons\";\n\nexport const SorterFilter = ( { sorterFilter, setSorterFilter, setCurrentPage }) => {\n\n    const handleSorter = (type) => {\n        setSorterFilter(prev => ({...prev, sorterType: type}));\n        setCurrentPage(1);\n    };\n\n    const handleFilter = (type) => {\n        setSorterFilter({sorterType: true, filterType: type});\n        setCurrentPage(1);\n    };\n\n\n    return (\n        <Grid container\n            direction='row'\n            alignItems='center'\n            justify='space-between'>\n            <Grid >\n                <FilterButtons handleFilter={handleFilter}\n                               filterType={sorterFilter.filterType} />\n            </Grid>\n            <Grid >\n                <Grid container\n                    direction='row'\n                    alignItems='center'\n                >\n                    <Typography>Sort by Date</Typography>\n                    <SortButtons handleSorter={handleSorter}\n                                 sorterType={sorterFilter.sorterType} />\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};","import { TextField } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\n\nexport const ToDoInput = ({ handleSubmit }) => {\n    const [todo, setTodo] = useState('');\n    \n    const pressEnter = async (event) => {\n        if (event.key === 'Enter') {\n            event.preventDefault();\n            await handleSubmit(todo);\n            setTodo('');\n        };\n    };\n\n    return (\n        <TextField\n            multiline={true}\n            label='ToDo'\n            fullWidth\n            variant='outlined'\n            margin='normal'\n            onChange={e => setTodo(e.target.value)}\n            onKeyDown={(e) => pressEnter(e)}\n            value={todo}\n        />\n    );\n};","import { Checkbox, Grid, IconButton, ListItem, ListItemText, TextField } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\n\nconst styles = {\n    border: '1px solid rgba(0, 0, 0, 0.23)',\n    borderRadius: '5px',\n    marginBottom: '10px'\n};\n\nexport const ToDoLIstItem = ({ todo, handleDelete, handleTodoChange }) => {\n    const time = todo.createdAt.match(/\\d+.\\d+.\\d+/s)[0];\n    const [toggleInput, setToggleInput] = useState(false);\n    const [task, setTask] = useState(todo);\n\n    const handleKeyDown = async (todo, e) => {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            await handleTodoChange(task);\n            setToggleInput(false);\n        };\n        if (e.key === 'Escape') {\n            setToggleInput(false);\n            setTask({...task, name: todo.name})\n        };\n    };\n    const handleCheck = () => {\n        setTask({...task, done: !task.done})\n        handleTodoChange(task)\n    }\n\n    return (\n        <ListItem style={styles}>\n            <Grid container\n                direction='row'\n                alignItems='center'>\n                <Grid item xs={1}>\n                    <Checkbox\n                        onChange={() => handleCheck()}\n                        checked={task.done}\n                        color='primary'\n                        icon={<RadioButtonUncheckedIcon />}\n                        checkedIcon={<CheckCircleIcon />}\n                    />\n                </Grid>\n                <Grid item xs={8}>\n                    {toggleInput\n                        ? <TextField\n                            multiline={true}\n                            value={task.name}\n                            fullWidth\n                            variant='outlined'\n                            autoFocus={true}\n                            onChange={e => setTask({...task, name:e.target.value})}\n                            onKeyDown={e => handleKeyDown(todo, e)} />\n                        : <ListItemText primary={todo.name}\n                            style={{ overflowWrap: 'break-word' }}\n                            multiline='true'\n                            onClick={() => setToggleInput(true)} />}\n                </Grid>\n                <Grid item xs={2}>\n                    <ListItemText primary={time} />\n                </Grid>\n                <Grid item xs={1}>\n                    <IconButton onClick={() => handleDelete(todo.uuid)}>\n                        <DeleteIcon />\n                    </IconButton>\n                </Grid>\n            </Grid>\n        </ListItem>\n    );\n};\n\n","import { List } from '@material-ui/core';\nimport React from 'react';\nimport { ToDoLIstItem } from './ToDoListItem';\n\nexport const ToDoList = ({ todos, handleDelete, handleTodoChange }) => {\n    return (\n        <List>\n            {todos.map((todo) => (\n                <ToDoLIstItem\n                    key={todo.uuid}\n                    todo={todo}\n                    handleDelete={handleDelete}\n                    handleTodoChange={handleTodoChange}\n                />\n            ))}\n        </List>\n    );\n};","import axios from 'axios'\n\nconst axiosConfig = axios.create({\n    baseURL: process.env.REACT_APP_URL\n});\n\n\nexport default axiosConfig;\n\n\n\n\n\n\n\n","import { CircularProgress, Grid } from '@material-ui/core';\nimport { useCallback, useEffect, useState } from 'react';\nimport { Pagination } from './Pagination';\nimport { SorterFilter } from './SorterFilter';\nimport { ToDoInput } from './ToDoInput';\nimport { ToDoList } from './ToDoList';\nimport axios from '../axiosConfig'\n\nexport const Todo = ({ setUserName, setIsLogin }) => {\n  //State\n    const POSTurl = 'task'\n  const [todos, setTodos] = useState([]);\n  const [sorterFilter, setSorterFilter] = useState({ sorterType: true, filterType: '' });\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(5);\n  const [pagesCount, setPagesCount] = useState(1);\n  const [isLoading, setIsLoading] = useState(true);\n\n\n  //Fetch todos from API\n\n  const fetchTodos = useCallback(async () => {\n    //creating GETurl\n    try {\n      const token = localStorage.getItem('token');\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      const { sorterType, filterType } = sorterFilter;\n      const res = await axios.get('/tasks', {\n        //SorterParams\n        params: {\n          filterBy: filterType,\n          order: sorterType ? 'desc' : 'asc',\n          curentPage: currentPage,\n          limit: postsPerPage\n        }\n      });\n      setTodos(res.data.tasks);\n      setPagesCount(res.data.pagesCount)\n      setIsLoading(false);\n      setUserName(res.data.userName);\n    } catch (err) {\n      const message = err.response.data.message;\n      if (message === 'Incorrect token') {\n        localStorage.removeItem('token')\n        setIsLogin(true)\n      };\n    }\n\n  }, [sorterFilter, setUserName, currentPage, postsPerPage, setIsLogin])\n\n  useEffect(() => {\n    fetchTodos()\n  }, [fetchTodos])\n\n  //Action functions\n  //Add Todo\n  const handleSubmit = async (todo) => {\n    await axios.post(POSTurl,\n      {\n        name: todo,\n        done: false\n      });\n    await fetchTodos();\n  };\n  //Delete Todo\n  const handleDelete = async (uuid) => {\n    await axios.delete(`${POSTurl}/${uuid}`);\n    await fetchTodos();\n  };\n  //Check Todo\n  // const handleCheck = async ({ name, done, uuid }) => {\n  //   await axios.patch(`${POSTurl}/${uuid}`,\n  //     {\n  //       name,\n  //       done: !done\n  //     });\n  //   await fetchTodos();\n  // };\n  // //Change Todo\n  const handleTodoChange = async ({name, done, uuid}) => {\n    await axios.patch(`${POSTurl}/${uuid}`,\n      {\n        name,\n        done\n      });\n    await fetchTodos();\n  };\n\n  return (\n    <>\n      <ToDoInput handleSubmit={handleSubmit}\n        todos={todos}\n        setTodos={setTodos}\n      />\n      <SorterFilter\n        sorterFilter={sorterFilter}\n        setSorterFilter={setSorterFilter}\n        setCurrentPage={setCurrentPage} />\n      {!isLoading &&\n        <ToDoList\n          todos={todos}\n          // handleCheck={handleCheck}\n          handleDelete={handleDelete}\n          handleTodoChange={handleTodoChange} \n          />}\n      {(pagesCount > 1 && !isLoading) &&\n        <Pagination\n          pagesCount={pagesCount}\n          currentPage={currentPage}\n          setCurrentPage={setCurrentPage} />\n      }\n      {isLoading &&\n        <Grid container alignItems='center' direction='column'>\n          <Grid item><CircularProgress /></Grid>\n        </Grid>\n      }\n    </>\n  );\n};\n","import { Button, Grid, TextField } from \"@material-ui/core\"\nimport { useState } from \"react\"\nimport axios from \"../axiosConfig\";\n\nexport const Auth = ({ setIsLogin, signup }) => {\n    const [user, setUser] = useState({ name: '', password: '' });\n    const [helperText, setHelperText] = useState('');\n    const login = async () => {\n        try {\n            const res = await axios.post('/login', {\n                name: user.name,\n                password: user.password\n            });\n            setUser({ name: '', password: '' });\n            const token = res.data.token;\n            localStorage.setItem('token', token);\n            setIsLogin(false);\n\n        } catch (err) {\n            const message = err.response.data.message;\n            setHelperText(message);\n        };\n    };\n    const signUp = async () => {\n        try {\n            await axios.post('/signup', {\n                name: user.name,\n                password: user.password\n            });\n            // login()\n        } catch (err) {\n            const message = err.response.data.message;\n            setHelperText(message);\n        };\n    };\n    const handleChange = (e) => {\n        const value = e.target.value;\n        setUser({ ...user, [e.target.name]: value });\n        setHelperText('');\n    }\n    return (\n        <form onSubmit={e => e.preventDefault()}>\n            <Grid\n                container\n                direction='column'\n                alignItems='center'>\n                <TextField\n                    name='name'\n                    error={helperText !== ''}\n                    helperText={helperText}\n                    onChange={e => handleChange(e)}\n                    value={user.name}\n                    label='Username'\n                    required\n                    fullWidth\n                    variant='outlined'\n                    margin='normal' />\n                <TextField\n                    name='password'\n                    required\n                    onChange={e => handleChange(e)}\n                    value={user.password}\n                    label='Password'\n                    fullWidth\n                    variant='outlined'\n                    margin='normal'\n                    type='password' />\n\n                {signup\n                    ? <Button\n                        type='submit'\n                        onClick={() => login()}\n                        color='primary'\n                        variant='contained'>Login</Button>\n                    : <Button\n                        type='submit'\n                        onClick={() => signUp()}\n                        color='secondary'\n                        variant='contained'>sign up</Button>}\n\n            </Grid>\n        </form>\n    )\n}","import { Button, Grid, Typography } from \"@material-ui/core\"\n\nexport const Header = ({ isLogin, setIsLogin, signup, setSignup, userName}) => {\n    const signOut = () => {\n        localStorage.removeItem('token')\n        setIsLogin(true)\n    };    \n\n    return (\n        <Grid\n            container\n            alignItems='center'\n            justify='space-between'>\n            <Grid item sx={8}>\n                <Typography variant='h3' align='center'>To Do</Typography>\n            </Grid>\n            {isLogin\n                ? <Grid>\n                    {signup\n                        ? <Button\n                            color='secondary'\n                            variant='contained'\n                            onClick={() => setSignup(false)}>\n                            sign up\n                            </Button>\n                        : <Button\n                            color='primary'\n                            variant='contained'\n                            onClick={() => setSignup(true)}>\n                            login\n                </Button>}\n                </Grid>\n                : <Grid item xs={4}>\n                    <Grid\n                        container\n                        alignItems='center'\n                        justify='space-between'>\n                        <Typography>\n                            {userName}\n                    </Typography>\n                        <Button\n                            onClick={() => signOut()}\n                            color='primary'\n                            variant='contained'>\n                            Signout\n                    </Button>\n                    </Grid>\n                </Grid>}\n        </Grid>\n    )\n}","import { useCallback, useEffect, useState } from 'react';\nimport './App.css';\nimport { Todo } from './components/Todo';\nimport { Auth } from './components/Auth';\nimport { Container } from '@material-ui/core';\nimport { Header } from './components/Header';\n\nfunction App() {\n    const [isLogin, setIsLogin] = useState(false)\n    const [signup, setSignup] = useState(false);\n    const [userName, setUserName] = useState('')\n\n    const checkToken = useCallback(() => {\n        if (!localStorage.token) setIsLogin(true);\n    }, []);\n\n    useEffect(() => {\n        checkToken();\n    }, [checkToken]);\n\n    return (\n        <Container maxWidth='sm'>\n            <Header\n                userName={userName}\n                isLogin={isLogin}\n                setIsLogin={setIsLogin}\n                signup={signup}\n                setSignup={setSignup} />\n            {isLogin\n                ? <Auth\n                    setIsLogin={setIsLogin}\n                    signup={signup} />\n                : <Todo\n                    setUserName={setUserName}\n                    setIsLogin={setIsLogin} />}\n        </Container>\n    );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport axios from './axiosConfig'\n\n\n\n\naxios.interceptors.response.use(null, error => {\n  console.log('STATUS', error.response.status);\n  console.log('DATA', error.response.data.message);\n  return Promise.reject(error)\n});\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}