{"version":3,"sources":["components/Pagination.js","components/FilterButtons.js","components/SortButtons.js","components/SorterFilter.js","components/ToDoInput.js","components/ToDoListItem.js","components/ToDoList.js","axiosConfig.js","components/auth/authSlice.js","components/Todo.js","components/auth/Auth.js","components/Header.js","app/alertSlice.js","App.js","reportWebVitals.js","app/store.js","index.js"],"names":["Pagination","currentPage","setCurrentPage","pagesCount","pageCount","Array","fill","map","_","i","Grid","container","Button","color","onClick","item","xs","ButtonGroup","fullWidth","number","variant","length","FilterButtons","handleFilter","filterType","title","type","button","SortButtons","handleSorter","sorterType","handleButton","IconButton","SorterFilter","sorterFilter","setSorterFilter","direction","alignItems","justify","Typography","prev","ToDoInput","handleTodoSubmit","useState","todo","setTodo","pressEnter","event","a","key","preventDefault","TextField","multiline","label","margin","onChange","e","target","value","onKeyDown","styles","border","borderRadius","marginBottom","ToDoLIstItem","handleTodoDelete","handleTodoChange","time","createdAt","match","toggleInput","setToggleInput","task","setTask","disabled","setDisabled","handleKeyDown","name","ListItem","style","Checkbox","newTask","done","handleCheck","checked","icon","checkedIcon","onBlur","autoFocus","ListItemText","primary","overflowWrap","ToDoList","todos","List","uuid","axiosConfig","axios","create","baseURL","process","authSlice","createSlice","initialState","isAuth","isSignup","reducers","toggleAuth","state","toggleSignup","actions","selectIsAuth","auth","selectIsSignup","Todo","POSTurl","dispatch","useDispatch","setTodos","postsPerPage","setPagesCount","isLoading","setIsLoading","fetchTodos","useCallback","token","localStorage","getItem","defaults","headers","common","get","params","filterBy","order","curentPage","limit","res","data","tasks","response","message","clear","useEffect","post","delete","patch","CircularProgress","Auth","handleLogin","handleSignup","useSelector","password","user","setUser","helperText","setHelperText","handleUserChange","onSubmit","error","required","Header","handleSignout","sx","align","alertSlice","isAlert","status","setAlert","action","payload","setIsAlert","selectAlert","alert","App","checkToken","decode","exp","Date","now","useLayoutEffect","setItem","Container","maxWidth","Snackbar","onClose","open","autoHideDuration","Alert","severity","AlertTitle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","authReducer","alertReducer","interceptors","use","Promise","reject","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1931a1ed.chunk.js","sourcesContent":["import { Button, ButtonGroup, Grid } from '@material-ui/core';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport React from 'react';\n\nexport const Pagination = ({ currentPage, setCurrentPage, pagesCount }) => {\n\n    const pageCount = new Array(pagesCount).fill(0).map((_, i) => i + 1)\n\n    return (\n        <Grid container>\n            <Button\n                color='primary'\n                onClick={() => setCurrentPage(1)}>\n                <ArrowBackIosIcon />\n                <ArrowBackIosIcon />\n            </Button>\n            <Grid item xs={9}>\n                <ButtonGroup fullWidth>\n                    {pageCount.map(number => (\n                        <Button\n                            color='primary'\n                            key={number}\n                            variant={number === currentPage && 'contained'}\n                            onClick={() => setCurrentPage(number)}>\n                            {number}\n                        </Button>\n                    ))}\n                </ButtonGroup>\n            </Grid>\n            <Button\n                color='primary'\n                onClick={() => setCurrentPage(pageCount.length)}>\n                <ArrowForwardIosIcon />\n                <ArrowForwardIosIcon />\n            </Button>\n        </Grid>\n    );\n};","import { Button, ButtonGroup } from '@material-ui/core';\nimport React from 'react';\n\nexport const FilterButtons = ({ handleFilter, filterType }) => {\n    const buttons = [{title: 'All', type: ''},\n                     {title: 'Done',type: 'done'},\n                     {title: 'Undone', type: 'undone'}];\n\n    return (\n        <ButtonGroup >\n            {buttons.map((button) => (\n                <Button color='primary'\n                    key={button.title}\n                    variant={button.type === filterType && 'contained'}\n                    onClick={() => {\n                        if (filterType !== button.type) {\n                            return handleFilter(button.type)\n                        }\n                    }}>{button.title}</Button>\n            ))}\n        </ButtonGroup>\n    );\n};","import { IconButton } from '@material-ui/core';\nimport React from 'react';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\n\nexport const SortButtons = ({ handleSorter , sorterType}) => {\n    const handleButton = (type) => {\n        if(type !== sorterType){\n            handleSorter(type);\n        };\n    };\n\n    return (\n        <>\n            <IconButton color={sorterType ? 'primary' : 'default'}\n                onClick={() => handleButton(true)}>\n                <ArrowUpwardIcon />\n            </IconButton>\n            <IconButton color={!sorterType ? 'primary' : 'default'}\n                onClick={() => handleButton(false)}>\n                <ArrowDownwardIcon />\n            </IconButton>\n        </>\n    );\n};","import { Grid, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { FilterButtons } from \"./FilterButtons\";\nimport { SortButtons } from \"./SortButtons\";\n\nexport const SorterFilter = ( { sorterFilter, setSorterFilter, setCurrentPage }) => {\n\n    const handleSorter = (type) => {\n        setSorterFilter(prev => ({...prev, sorterType: type}));\n        setCurrentPage(1);\n    };\n\n    const handleFilter = (type) => {\n        setSorterFilter({sorterType: true, filterType: type});\n        setCurrentPage(1);\n    };\n\n\n    return (\n        <Grid container\n            direction='row'\n            alignItems='center'\n            justify='space-between'>\n            <Grid >\n                <FilterButtons handleFilter={handleFilter}\n                               filterType={sorterFilter.filterType} />\n            </Grid>\n            <Grid >\n                <Grid container\n                    direction='row'\n                    alignItems='center'\n                >\n                    <Typography>Sort by Date</Typography>\n                    <SortButtons handleSorter={handleSorter}\n                                 sorterType={sorterFilter.sorterType} />\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};","import { TextField } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\n\nexport const ToDoInput = ({ handleTodoSubmit }) => {\n    const [todo, setTodo] = useState('');\n    \n    const pressEnter = async (event) => {\n        if (event.key === 'Enter') {\n            event.preventDefault();\n            await handleTodoSubmit(todo);\n            setTodo('');\n        };\n    };\n\n    return (\n        <TextField\n            multiline={true}\n            label='ToDo'\n            fullWidth\n            variant='outlined'\n            margin='normal'\n            onChange={e => setTodo(e.target.value)}\n            onKeyDown={(e) => pressEnter(e)}\n            value={todo}\n        />\n    );\n};","import { Checkbox, Grid, IconButton, ListItem, ListItemText, TextField } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\n\nconst styles = {\n    border: '1px solid rgba(0, 0, 0, 0.23)',\n    borderRadius: '5px',\n    marginBottom: '10px'\n};\n\nexport const ToDoLIstItem = ({ todo, handleTodoDelete, handleTodoChange }) => {\n    const time = todo.createdAt.match(/\\d+.\\d+.\\d+/s)[0];\n    const [toggleInput, setToggleInput] = useState(false);\n    const [task, setTask] = useState(todo);\n    const [disabled, setDisabled] = useState(false);\n\n    const handleKeyDown = async (todo, e) => {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            await handleTodoChange(task);\n            setToggleInput(false);\n        };\n        if (e.key === 'Escape') {\n            setToggleInput(false);\n            setTask({ ...task, name: todo.name });\n        };\n    };\n    const handleCheck = () => {\n        const newTask = { ...task, done: !task.done };\n        setTask(newTask);\n        handleTodoChange(newTask);\n    };\n    const handleDelete = () => {\n        setDisabled(true);\n        handleTodoDelete(todo);\n    };\n    const handleBlur = () => {\n        setToggleInput(false);\n        setTask({ ...task, name: todo.name });\n    };\n    return (\n        <ListItem style={styles}>\n            <Grid container\n                direction='row'\n                alignItems='center'>\n                <Grid item xs={1}>\n                    <Checkbox\n                        onChange={() => handleCheck()}\n                        checked={task.done}\n                        color='primary'\n                        icon={<RadioButtonUncheckedIcon />}\n                        checkedIcon={<CheckCircleIcon />}\n                    />\n                </Grid>\n                <Grid item xs={8}>\n                    {toggleInput\n                        ? <TextField\n                            onBlur={() => handleBlur()}\n                            onChange={e => setTask({ ...task, name: e.target.value })}\n                            onKeyDown={e => handleKeyDown(todo, e)} \n                            value={task.name}\n                            multiline={true}\n                            autoFocus={true}\n                            variant='outlined'\n                            fullWidth />\n                        : <ListItemText primary={todo.name}\n                            style={{ overflowWrap: 'break-word' }}\n                            multiline='true'\n                            onClick={() => setToggleInput(true)} />}\n                </Grid>\n                <Grid item xs={2}>\n                    <ListItemText primary={time} />\n                </Grid>\n                <Grid item xs={1}>\n                    <IconButton\n                        disabled={disabled}\n                        onClick={() => handleDelete()}>\n                        <DeleteIcon />\n                    </IconButton>\n                </Grid>\n            </Grid>\n        </ListItem>\n    );\n};\n\n","import { List } from '@material-ui/core';\nimport React from 'react';\nimport { ToDoLIstItem } from './ToDoListItem';\n\nexport const ToDoList = ({ todos, handleTodoDelete, handleTodoChange }) => {\n    return (\n        <List>\n            {todos.map((todo) => (\n                <ToDoLIstItem\n                    key={todo.uuid}\n                    todo={todo}\n                    handleTodoDelete={handleTodoDelete}\n                    handleTodoChange={handleTodoChange}\n                />\n            ))}\n        </List>\n    );\n};","import axios from 'axios'\n\nconst axiosConfig = axios.create({\n    baseURL: process.env.REACT_APP_URL\n});\n\n\nexport default axiosConfig;\n\n\n\n\n\n\n\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst authSlice = createSlice({\n    name: 'auth',\n    initialState: {\n        isAuth: true,\n        isSignup: false\n    },\n    reducers:{\n        toggleAuth(state) {\n            state.isAuth = !state.isAuth\n        },\n        toggleSignup(state) {\n            state.isSignup = !state.isSignup\n        }\n\n    }\n})\n\nexport const { toggleAuth, toggleSignup } = authSlice.actions\nexport const selectIsAuth = state => state.auth.isAuth\nexport const selectIsSignup = state => state.auth.isSignup\nexport default authSlice.reducer","import { CircularProgress, Grid } from '@material-ui/core';\nimport { useCallback, useEffect, useState } from 'react';\nimport { Pagination } from './Pagination';\nimport { SorterFilter } from './SorterFilter';\nimport { ToDoInput } from './ToDoInput';\nimport { ToDoList } from './ToDoList';\nimport axios from '../axiosConfig'\nimport { useDispatch } from 'react-redux';\nimport { toggleAuth } from './auth/authSlice'\n\nexport const Todo = () => {\n  //State\n  const POSTurl = 'task';\n  const dispatch = useDispatch();\n  const [todos, setTodos] = useState([]);\n  const [sorterFilter, setSorterFilter] = useState({ sorterType: true, filterType: '' });\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(5);\n  const [pagesCount, setPagesCount] = useState(1);\n  const [isLoading, setIsLoading] = useState(true);\n\n\n  //Fetch todos from API\n\n  const fetchTodos = useCallback(async () => {\n    //creating GETurl\n    try {\n      const token = localStorage.getItem('token');\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      const { sorterType, filterType } = sorterFilter;\n      const res = await axios.get('/tasks', {\n        //SorterParams\n        params: {\n          filterBy: filterType,\n          order: sorterType ? 'desc' : 'asc',\n          curentPage: currentPage,\n          limit: postsPerPage\n        }\n      });\n      setTodos(res.data.tasks);\n      setPagesCount(res.data.pagesCount)\n      setIsLoading(false);\n    } catch (err) {\n      const message = err.response.data.message;\n      if (message === 'Incorrect token') {\n        localStorage.clear();\n        dispatch(toggleAuth());\n      };\n    }\n\n  }, [sorterFilter, dispatch, currentPage, postsPerPage])\n\n  useEffect(() => {\n    fetchTodos()\n  }, [fetchTodos])\n\n\n\n  //Action functions\n  //Add Todo\n  const handleTodoSubmit = async (todo) => {\n    await axios.post(POSTurl,\n      {\n        name: todo,\n        done: false\n      });\n    await fetchTodos();\n  };\n  //Delete Todo\n  const handleTodoDelete = async ({ uuid }) => {\n    await axios.delete(`${POSTurl}/${uuid}`);\n    await fetchTodos();\n  };\n  // //Change Todo\n  const handleTodoChange = async ({ name, done, uuid }) => {\n    await axios.patch(`${POSTurl}/${uuid}`,\n      {\n        name,\n        done\n      });\n    await fetchTodos();\n  };\n\n  return (\n    <>\n      <ToDoInput handleTodoSubmit={handleTodoSubmit}\n        todos={todos}\n        setTodos={setTodos}\n      />\n      <SorterFilter\n        sorterFilter={sorterFilter}\n        setSorterFilter={setSorterFilter}\n        setCurrentPage={setCurrentPage} />\n      {!isLoading &&\n        <ToDoList\n          todos={todos}\n          handleTodoDelete={handleTodoDelete}\n          handleTodoChange={handleTodoChange}\n        />}\n      {(pagesCount > 1 && !isLoading) &&\n        <Pagination\n          pagesCount={pagesCount}\n          currentPage={currentPage}\n          setCurrentPage={setCurrentPage} />\n      }\n      {isLoading &&\n        <Grid container alignItems='center' direction='column'>\n          <Grid item><CircularProgress /></Grid>\n        </Grid>\n      }\n    </>\n  );\n};\n","import { Button, Grid, TextField } from \"@material-ui/core\"\nimport { useState } from \"react\"\nimport { useSelector } from \"react-redux\";\nimport { selectIsSignup} from './authSlice'\n\nexport const Auth = ({ handleLogin, handleSignup }) => {\n    const isSignup = useSelector(selectIsSignup);\n    const [user, setUser] = useState({ name: '', password: '' });\n    const [helperText, setHelperText] = useState('');\n    \n    const handleUserChange = (e) => {\n        const value = e.target.value;\n        setUser({ ...user, [e.target.name]: value });\n        setHelperText('');\n    }\n    return (\n        <form onSubmit={e => e.preventDefault()}>\n            <Grid\n                container\n                direction='column'\n                alignItems='center'>\n                <TextField\n                    name='name'\n                    error={helperText !== ''}\n                    helperText={helperText}\n                    onChange={e => handleUserChange(e)}\n                    value={user.name}\n                    label='Username'\n                    required\n                    fullWidth\n                    variant='outlined'\n                    margin='normal' />\n                <TextField\n                    name='password'\n                    required\n                    onChange={e => handleUserChange(e)}\n                    value={user.password}\n                    label='Password'\n                    fullWidth\n                    variant='outlined'\n                    margin='normal'\n                    type='password' />\n\n                {isSignup\n                    ? <Button\n                        type='submit'\n                        onClick={() => handleLogin(user)}\n                        color='primary'\n                        variant='contained'>Login</Button>\n                    : <Button\n                        type='submit'\n                        onClick={() => handleSignup(user)}\n                        color='secondary'\n                        variant='contained'>sign up</Button>}\n\n            </Grid>\n        </form>\n    )\n}","import { Button, Grid, Typography } from \"@material-ui/core\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectIsSignup, selectIsAuth, toggleSignup } from './auth/authSlice'\n\n\nexport const Header = ({ handleSignout }) => {\n    const isAuth = useSelector(selectIsAuth)\n    const isSignup = useSelector(selectIsSignup);\n    const dispatch = useDispatch();\n    const name = localStorage.getItem('name')\n\n    return (\n        <Grid\n            container\n            alignItems='center'\n            justify='space-between'>\n            <Grid item sx={8}>\n                <Typography variant='h3' align='center'>To Do</Typography>\n            </Grid>\n            {isAuth\n                ? <Grid>\n                    <Button\n                        color={isSignup ? 'secondary' : 'primary'}\n                        variant='contained'\n                        onClick={() => dispatch(toggleSignup())}>\n                        {isSignup ? 'sign up' : 'login'}\n                    </Button>\n\n                </Grid>\n                : <Grid item xs={4}>\n                    <Grid\n                        container\n                        alignItems='center'\n                        justify='space-between'>\n                        <Typography>\n                            {name}\n                        </Typography>\n                        <Button\n                            onClick={() => handleSignout()}\n                            color='primary'\n                            variant='contained'>\n                            Signout\n                    </Button>\n                    </Grid>\n                </Grid>}\n        </Grid>\n    )\n}","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst alertSlice = createSlice({\n    name: 'alert',\n    initialState: {\n        isAlert: false,\n        message: '',\n        status: ''\n    },\n    reducers:{\n        setAlert(state, action){\n            state.isAlert = action.payload.isAlert;\n            state.message = action.payload.message;\n            state.status = action.payload.status;\n        },\n        setIsAlert(state, action){\n            state.isAlert = action.payload;\n        }\n    }\n});\n\nexport const { setAlert, setIsAlert } = alertSlice.actions\nexport const selectAlert = state => state.alert\nexport default alertSlice.reducer\n\n\n","import { useCallback, useLayoutEffect } from 'react';\nimport './App.css';\nimport { Todo } from './components/Todo';\nimport { Auth } from './components/auth/Auth';\nimport { Container, Snackbar } from '@material-ui/core';\nimport { Header } from './components/Header';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsAuth, toggleAuth } from './components/auth/authSlice';\nimport { decode } from 'jsonwebtoken';\nimport axios from './axiosConfig'\nimport { selectAlert, setIsAlert } from './app/alertSlice'\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nfunction App() {\n\n    const alert = useSelector(selectAlert);\n    const isAuth = useSelector(selectIsAuth);\n    const dispatch = useDispatch();\n\n    const checkToken = useCallback(() => {\n        if (!localStorage.token) return\n        const data = decode(localStorage.token)?.exp\n        if (Date.now() > data) dispatch(toggleAuth());\n    }, [dispatch]);\n    useLayoutEffect(() => {\n        checkToken();\n    }, [checkToken]);\n\n    const handleLogin = async ({ name, password }) => {\n        const res = await axios.post('/login', { name, password });\n        const token = res.data.token;\n        localStorage.setItem('token', token);\n        localStorage.setItem('name', name);\n        dispatch(toggleAuth());\n    };\n    const handleSignup = async ({ name, password }) => {\n        await axios.post('/signup', { name, password });\n        handleLogin({ name, password });\n    };\n    const handleSignout = () => {\n        localStorage.clear();\n        dispatch(toggleAuth());\n    }\n    const handleClose = () => {\n        dispatch(setIsAlert(false));\n    };\n\n    return (\n        <Container maxWidth='sm'>\n            <Header\n                handleSignout={handleSignout} />\n            {isAuth\n                ? <Auth\n                    handleLogin={handleLogin}\n                    handleSignup={handleSignup} />\n                : <Todo />}\n            <Snackbar \n                onClose={handleClose}\n                open={alert.isAlert}\n                autoHideDuration={3000} >\n                <Alert\n                    severity=\"error\" >\n                    <AlertTitle>\n                        {`Status code ${alert.status}`}\n                    </AlertTitle>\n                    {alert.message}\n                </Alert>\n            </Snackbar>\n        </Container>\n    );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport authReducer from '../components/auth/authSlice'\nimport alertReducer from './alertSlice'\n\n\n\n\nexport const store = configureStore({\n    reducer: {\n      auth: authReducer,\n      alert: alertReducer,\n    },\n  });","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport axios from './axiosConfig'\nimport { Provider } from 'react-redux';\nimport { store } from './app/store'\nimport { setAlert } from './app/alertSlice'\n\n\n// const {isAlert, message, status } = useSelector()\n// const dispatch = useDispatch()\n\n\naxios.interceptors.response.use(null, error => {\n  const alert = {\n    isAlert: true,\n    message: error.response.data.message,\n    status: error.response.status\n  }\n  store.dispatch(setAlert(alert))\n  return Promise.reject(error)\n});\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}