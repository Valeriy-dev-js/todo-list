{"version":3,"sources":["components/Pagination.js","components/FilterButtons.js","components/SortButtons.js","components/SorterFilter.js","components/ToDoInput.js","components/ToDoListItem.js","components/ToDoList.js","axiosConfig.js","components/Todo.js","components/Auth.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Pagination","currentPage","setCurrentPage","pagesCount","pageCount","Array","fill","map","_","i","Grid","container","Button","color","onClick","item","xs","ButtonGroup","fullWidth","number","variant","length","FilterButtons","handleFilter","filterType","title","type","button","SortButtons","handleSorter","sorterType","handleButton","IconButton","SorterFilter","sorterFilter","setSorterFilter","direction","alignItems","justify","Typography","prev","ToDoInput","handleSubmit","useState","todo","setTodo","pressEnter","event","a","key","preventDefault","TextField","multiline","label","margin","onChange","e","target","value","onKeyDown","styles","border","borderRadius","marginBottom","ToDoLIstItem","handleDelete","handleTodoChange","time","createdAt","match","toggleInput","setToggleInput","task","setTask","handleKeyDown","name","ListItem","style","Checkbox","newTask","done","handleCheck","checked","icon","checkedIcon","autoFocus","ListItemText","primary","overflowWrap","uuid","ToDoList","todos","List","axiosConfig","axios","create","baseURL","Todo","setUserName","setIsLogin","POSTurl","setTodos","postsPerPage","setPagesCount","isLoading","setIsLoading","fetchTodos","useCallback","token","localStorage","getItem","defaults","headers","common","get","params","filterBy","order","curentPage","limit","res","data","tasks","userName","response","message","removeItem","useEffect","post","delete","patch","CircularProgress","Auth","signup","password","user","setUser","helperText","setHelperText","login","setItem","signUp","handleChange","onSubmit","error","required","Header","isLogin","setSignup","sx","align","App","checkToken","Container","maxWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","interceptors","use","console","log","status","Promise","reject","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee53a352.chunk.js","sourcesContent":["import { Button, ButtonGroup, Grid } from '@material-ui/core';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport React from 'react';\r\n\r\nexport const Pagination = ({ currentPage, setCurrentPage, pagesCount }) => {\r\n\r\n    const pageCount = new Array(pagesCount).fill(0).map((_, i) => i + 1)\r\n\r\n    return (\r\n        <Grid container>\r\n            <Button\r\n                color='primary'\r\n                onClick={() => setCurrentPage(1)}>\r\n                <ArrowBackIosIcon />\r\n                <ArrowBackIosIcon />\r\n            </Button>\r\n            <Grid item xs={9}>\r\n                <ButtonGroup fullWidth>\r\n                    {pageCount.map(number => (\r\n                        <Button\r\n                            color='primary'\r\n                            key={number}\r\n                            variant={number === currentPage && 'contained'}\r\n                            onClick={() => setCurrentPage(number)}>\r\n                            {number}\r\n                        </Button>\r\n                    ))}\r\n                </ButtonGroup>\r\n            </Grid>\r\n            <Button\r\n                color='primary'\r\n                onClick={() => setCurrentPage(pageCount.length)}>\r\n                <ArrowForwardIosIcon />\r\n                <ArrowForwardIosIcon />\r\n            </Button>\r\n        </Grid>\r\n    );\r\n};","import { Button, ButtonGroup } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nexport const FilterButtons = ({ handleFilter, filterType }) => {\r\n    const buttons = [{title: 'All', type: ''},\r\n                     {title: 'Done',type: 'done'},\r\n                     {title: 'Undone', type: 'undone'}];\r\n\r\n    return (\r\n        <ButtonGroup >\r\n            {buttons.map((button) => (\r\n                <Button color='primary'\r\n                    key={button.title}\r\n                    variant={button.type === filterType && 'contained'}\r\n                    onClick={() => {\r\n                        if (filterType !== button.type) {\r\n                            return handleFilter(button.type)\r\n                        }\r\n                    }}>{button.title}</Button>\r\n            ))}\r\n        </ButtonGroup>\r\n    );\r\n};","import { IconButton } from '@material-ui/core';\r\nimport React from 'react';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\n\r\nexport const SortButtons = ({ handleSorter , sorterType}) => {\r\n    const handleButton = (type) => {\r\n        if(type !== sorterType){\r\n            handleSorter(type);\r\n        };\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <IconButton color={sorterType ? 'primary' : 'default'}\r\n                onClick={() => handleButton(true)}>\r\n                <ArrowUpwardIcon />\r\n            </IconButton>\r\n            <IconButton color={!sorterType ? 'primary' : 'default'}\r\n                onClick={() => handleButton(false)}>\r\n                <ArrowDownwardIcon />\r\n            </IconButton>\r\n        </>\r\n    );\r\n};","import { Grid, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { FilterButtons } from \"./FilterButtons\";\r\nimport { SortButtons } from \"./SortButtons\";\r\n\r\nexport const SorterFilter = ( { sorterFilter, setSorterFilter, setCurrentPage }) => {\r\n\r\n    const handleSorter = (type) => {\r\n        setSorterFilter(prev => ({...prev, sorterType: type}));\r\n        setCurrentPage(1);\r\n    };\r\n\r\n    const handleFilter = (type) => {\r\n        setSorterFilter({sorterType: true, filterType: type});\r\n        setCurrentPage(1);\r\n    };\r\n\r\n\r\n    return (\r\n        <Grid container\r\n            direction='row'\r\n            alignItems='center'\r\n            justify='space-between'>\r\n            <Grid >\r\n                <FilterButtons handleFilter={handleFilter}\r\n                               filterType={sorterFilter.filterType} />\r\n            </Grid>\r\n            <Grid >\r\n                <Grid container\r\n                    direction='row'\r\n                    alignItems='center'\r\n                >\r\n                    <Typography>Sort by Date</Typography>\r\n                    <SortButtons handleSorter={handleSorter}\r\n                                 sorterType={sorterFilter.sorterType} />\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};","import { TextField } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\n\r\nexport const ToDoInput = ({ handleSubmit }) => {\r\n    const [todo, setTodo] = useState('');\r\n    \r\n    const pressEnter = async (event) => {\r\n        if (event.key === 'Enter') {\r\n            event.preventDefault();\r\n            await handleSubmit(todo);\r\n            setTodo('');\r\n        };\r\n    };\r\n\r\n    return (\r\n        <TextField\r\n            multiline={true}\r\n            label='ToDo'\r\n            fullWidth\r\n            variant='outlined'\r\n            margin='normal'\r\n            onChange={e => setTodo(e.target.value)}\r\n            onKeyDown={(e) => pressEnter(e)}\r\n            value={todo}\r\n        />\r\n    );\r\n};","import { Checkbox, Grid, IconButton, ListItem, ListItemText, TextField } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\n\r\nconst styles = {\r\n    border: '1px solid rgba(0, 0, 0, 0.23)',\r\n    borderRadius: '5px',\r\n    marginBottom: '10px'\r\n};\r\n\r\nexport const ToDoLIstItem = ({ todo, handleDelete, handleTodoChange }) => {\r\n    const time = todo.createdAt.match(/\\d+.\\d+.\\d+/s)[0];\r\n    const [toggleInput, setToggleInput] = useState(false);\r\n    const [task, setTask] = useState(todo);\r\n\r\n    const handleKeyDown = async (todo, e) => {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n            await handleTodoChange(task);\r\n            setToggleInput(false);\r\n        };\r\n        if (e.key === 'Escape') {\r\n            setToggleInput(false);\r\n            setTask({...task, name: todo.name})\r\n        };\r\n    };\r\n    const handleCheck = () => {\r\n        const newTask = {...task, done: !task.done}\r\n        setTask(newTask)\r\n        handleTodoChange(newTask)\r\n    }\r\n    return (\r\n        <ListItem style={styles}>\r\n            <Grid container\r\n                direction='row'\r\n                alignItems='center'>\r\n                <Grid item xs={1}>\r\n                    <Checkbox\r\n                        onChange={() => handleCheck()}\r\n                        checked={task.done}\r\n                        color='primary'\r\n                        icon={<RadioButtonUncheckedIcon />}\r\n                        checkedIcon={<CheckCircleIcon />}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                    {toggleInput\r\n                        ? <TextField\r\n                            multiline={true}\r\n                            value={task.name}\r\n                            fullWidth\r\n                            variant='outlined'\r\n                            autoFocus={true}\r\n                            onChange={e => setTask({...task, name:e.target.value})}\r\n                            onKeyDown={e => handleKeyDown(todo, e)} />\r\n                        : <ListItemText primary={todo.name}\r\n                            style={{ overflowWrap: 'break-word' }}\r\n                            multiline='true'\r\n                            onClick={() => setToggleInput(true)} />}\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <ListItemText primary={time} />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                    <IconButton onClick={() => handleDelete(todo.uuid)}>\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </Grid>\r\n            </Grid>\r\n        </ListItem>\r\n    );\r\n};\r\n\r\n","import { List } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { ToDoLIstItem } from './ToDoListItem';\r\n\r\nexport const ToDoList = ({ todos, handleDelete, handleTodoChange }) => {\r\n    return (\r\n        <List>\r\n            {todos.map((todo) => (\r\n                <ToDoLIstItem\r\n                    key={todo.uuid}\r\n                    todo={todo}\r\n                    handleDelete={handleDelete}\r\n                    handleTodoChange={handleTodoChange}\r\n                />\r\n            ))}\r\n        </List>\r\n    );\r\n};","import axios from 'axios'\r\n\r\nconst axiosConfig = axios.create({\r\n    baseURL: 'https://valera-mvp.herokuapp.com/'\r\n});\r\n\r\n\r\nexport default axiosConfig;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { CircularProgress, Grid } from '@material-ui/core';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { Pagination } from './Pagination';\r\nimport { SorterFilter } from './SorterFilter';\r\nimport { ToDoInput } from './ToDoInput';\r\nimport { ToDoList } from './ToDoList';\r\nimport axios from '../axiosConfig'\r\n\r\nexport const Todo = ({ setUserName, setIsLogin }) => {\r\n  //State\r\n    const POSTurl = 'task'\r\n  const [todos, setTodos] = useState([]);\r\n  const [sorterFilter, setSorterFilter] = useState({ sorterType: true, filterType: '' });\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(5);\r\n  const [pagesCount, setPagesCount] = useState(1);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n\r\n  //Fetch todos from API\r\n\r\n  const fetchTodos = useCallback(async () => {\r\n    //creating GETurl\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      const { sorterType, filterType } = sorterFilter;\r\n      const res = await axios.get('/tasks', {\r\n        //SorterParams\r\n        params: {\r\n          filterBy: filterType,\r\n          order: sorterType ? 'desc' : 'asc',\r\n          curentPage: currentPage,\r\n          limit: postsPerPage\r\n        }\r\n      });\r\n      setTodos(res.data.tasks);\r\n      setPagesCount(res.data.pagesCount)\r\n      setIsLoading(false);\r\n      setUserName(res.data.userName);\r\n    } catch (err) {\r\n      const message = err.response.data.message;\r\n      if (message === 'Incorrect token') {\r\n        localStorage.removeItem('token')\r\n        setIsLogin(true)\r\n      };\r\n    }\r\n\r\n  }, [sorterFilter, setUserName, currentPage, postsPerPage, setIsLogin])\r\n\r\n  useEffect(() => {\r\n    fetchTodos()\r\n  }, [fetchTodos])\r\n\r\n  //Action functions\r\n  //Add Todo\r\n  const handleSubmit = async (todo) => {\r\n    await axios.post(POSTurl,\r\n      {\r\n        name: todo,\r\n        done: false\r\n      });\r\n    await fetchTodos();\r\n  };\r\n  //Delete Todo\r\n  const handleDelete = async (uuid) => {\r\n    await axios.delete(`${POSTurl}/${uuid}`);\r\n    await fetchTodos();\r\n  };\r\n  //Check Todo\r\n  // const handleCheck = async ({ name, done, uuid }) => {\r\n  //   await axios.patch(`${POSTurl}/${uuid}`,\r\n  //     {\r\n  //       name,\r\n  //       done: !done\r\n  //     });\r\n  //   await fetchTodos();\r\n  // };\r\n  // //Change Todo\r\n  const handleTodoChange = async ({name, done, uuid}) => {\r\n    await axios.patch(`${POSTurl}/${uuid}`,\r\n      {\r\n        name,\r\n        done\r\n      });\r\n    await fetchTodos();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToDoInput handleSubmit={handleSubmit}\r\n        todos={todos}\r\n        setTodos={setTodos}\r\n      />\r\n      <SorterFilter\r\n        sorterFilter={sorterFilter}\r\n        setSorterFilter={setSorterFilter}\r\n        setCurrentPage={setCurrentPage} />\r\n      {!isLoading &&\r\n        <ToDoList\r\n          todos={todos}\r\n          // handleCheck={handleCheck}\r\n          handleDelete={handleDelete}\r\n          handleTodoChange={handleTodoChange} \r\n          />}\r\n      {(pagesCount > 1 && !isLoading) &&\r\n        <Pagination\r\n          pagesCount={pagesCount}\r\n          currentPage={currentPage}\r\n          setCurrentPage={setCurrentPage} />\r\n      }\r\n      {isLoading &&\r\n        <Grid container alignItems='center' direction='column'>\r\n          <Grid item><CircularProgress /></Grid>\r\n        </Grid>\r\n      }\r\n    </>\r\n  );\r\n};\r\n","import { Button, Grid, TextField } from \"@material-ui/core\"\r\nimport { useState } from \"react\"\r\nimport axios from \"../axiosConfig\";\r\n\r\nexport const Auth = ({ setIsLogin, signup }) => {\r\n    const [user, setUser] = useState({ name: '', password: '' });\r\n    const [helperText, setHelperText] = useState('');\r\n    const login = async () => {\r\n        try {\r\n            const res = await axios.post('/login', {\r\n                name: user.name,\r\n                password: user.password\r\n            });\r\n            setUser({ name: '', password: '' });\r\n            const token = res.data.token;\r\n            localStorage.setItem('token', token);\r\n            setIsLogin(false);\r\n\r\n        } catch (err) {\r\n            const message = err.response.data.message;\r\n            setHelperText(message);\r\n        };\r\n    };\r\n    const signUp = async () => {\r\n        try {\r\n            await axios.post('/signup', {\r\n                name: user.name,\r\n                password: user.password\r\n            });\r\n            // login()\r\n        } catch (err) {\r\n            const message = err.response.data.message;\r\n            setHelperText(message);\r\n        };\r\n    };\r\n    const handleChange = (e) => {\r\n        const value = e.target.value;\r\n        setUser({ ...user, [e.target.name]: value });\r\n        setHelperText('');\r\n    }\r\n    return (\r\n        <form onSubmit={e => e.preventDefault()}>\r\n            <Grid\r\n                container\r\n                direction='column'\r\n                alignItems='center'>\r\n                <TextField\r\n                    name='name'\r\n                    error={helperText !== ''}\r\n                    helperText={helperText}\r\n                    onChange={e => handleChange(e)}\r\n                    value={user.name}\r\n                    label='Username'\r\n                    required\r\n                    fullWidth\r\n                    variant='outlined'\r\n                    margin='normal' />\r\n                <TextField\r\n                    name='password'\r\n                    required\r\n                    onChange={e => handleChange(e)}\r\n                    value={user.password}\r\n                    label='Password'\r\n                    fullWidth\r\n                    variant='outlined'\r\n                    margin='normal'\r\n                    type='password' />\r\n\r\n                {signup\r\n                    ? <Button\r\n                        type='submit'\r\n                        onClick={() => login()}\r\n                        color='primary'\r\n                        variant='contained'>Login</Button>\r\n                    : <Button\r\n                        type='submit'\r\n                        onClick={() => signUp()}\r\n                        color='secondary'\r\n                        variant='contained'>sign up</Button>}\r\n\r\n            </Grid>\r\n        </form>\r\n    )\r\n}","import { Button, Grid, Typography } from \"@material-ui/core\"\r\n\r\nexport const Header = ({ isLogin, setIsLogin, signup, setSignup, userName}) => {\r\n    const signOut = () => {\r\n        localStorage.removeItem('token')\r\n        setIsLogin(true)\r\n    };    \r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            alignItems='center'\r\n            justify='space-between'>\r\n            <Grid item sx={8}>\r\n                <Typography variant='h3' align='center'>To Do</Typography>\r\n            </Grid>\r\n            {isLogin\r\n                ? <Grid>\r\n                    {signup\r\n                        ? <Button\r\n                            color='secondary'\r\n                            variant='contained'\r\n                            onClick={() => setSignup(false)}>\r\n                            sign up\r\n                            </Button>\r\n                        : <Button\r\n                            color='primary'\r\n                            variant='contained'\r\n                            onClick={() => setSignup(true)}>\r\n                            login\r\n                </Button>}\r\n                </Grid>\r\n                : <Grid item xs={4}>\r\n                    <Grid\r\n                        container\r\n                        alignItems='center'\r\n                        justify='space-between'>\r\n                        <Typography>\r\n                            {userName}\r\n                    </Typography>\r\n                        <Button\r\n                            onClick={() => signOut()}\r\n                            color='primary'\r\n                            variant='contained'>\r\n                            Signout\r\n                    </Button>\r\n                    </Grid>\r\n                </Grid>}\r\n        </Grid>\r\n    )\r\n}","import { useCallback, useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport { Todo } from './components/Todo';\r\nimport { Auth } from './components/Auth';\r\nimport { Container } from '@material-ui/core';\r\nimport { Header } from './components/Header';\r\n\r\nfunction App() {\r\n    const [isLogin, setIsLogin] = useState(false)\r\n    const [signup, setSignup] = useState(false);\r\n    const [userName, setUserName] = useState('')\r\n\r\n    const checkToken = useCallback(() => {\r\n        if (!localStorage.token) setIsLogin(true);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        checkToken();\r\n    }, [checkToken]);\r\n\r\n    return (\r\n        <Container maxWidth='sm'>\r\n            <Header\r\n                userName={userName}\r\n                isLogin={isLogin}\r\n                setIsLogin={setIsLogin}\r\n                signup={signup}\r\n                setSignup={setSignup} />\r\n            {isLogin\r\n                ? <Auth\r\n                    setIsLogin={setIsLogin}\r\n                    signup={signup} />\r\n                : <Todo\r\n                    setUserName={setUserName}\r\n                    setIsLogin={setIsLogin} />}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport axios from './axiosConfig'\r\n\r\n\r\n\r\n\r\naxios.interceptors.response.use(null, error => {\r\n  console.log('STATUS', error.response.status);\r\n  console.log('DATA', error.response.data.message);\r\n  return Promise.reject(error)\r\n});\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}